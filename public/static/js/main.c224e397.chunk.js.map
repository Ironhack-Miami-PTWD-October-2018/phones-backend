{"version":3,"sources":["components/user-pages/Signup.js","components/user-pages/Login.js","components/Home.js","components/phones-pages/AddPhone.js","components/phones-pages/PhoneList.js","components/phones-pages/EditPhone.js","components/phones-pages/PhoneDetails.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","fullName","email","originalPassword","message","event","_event$target","target","name","value","setState","defineProperty","_this2","preventDefault","axios","post","process","withCredentials","then","response","userDoc","data","onUserChange","catch","err","_this3","currentUser","react_default","a","createElement","_id","className","onSubmit","handleSubmit","onChange","genericSync","type","placeholder","Component","LoginPage","console","log","react_router","to","Home","AddPhone","model","brand","price","image","specs","isSubmitSuccessful","files","uploadData","FormData","append","fileUrl","alert","index","_this4","uploadImage","src","width","map","oneSpec","key","syncSpecs","PhoneList","phoneArray","get","length","onePhone","react_router_dom","concat","alt","EditPhone","_this$props$thePhone","thePhone","put","history","push","_this$state","PhoneDetails","showEdit","params","match","phoneId","responseFromApi","id","delete","createdAt","phones_pages_EditPhone","assign","onClick","showEditForm","deletePhone","NotFound","App","syncCurrentUser","logoutClick","exact","path","component","render","phones_pages_AddPhone","user_pages_Signup","Login","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c224e397.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Signup extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      originalPassword: \"\",\n      message: null,\n    };\n  }\n\n  // 🏆 this method is reusable for any form!!!\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(\n      process.env.REACT_APP_SERVER_URL + \"/api/signup\",\n      this.state,\n      { withCredentials: true } // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        // console.log(\"Signup Page\", response.data);\n        const { userDoc } = response.data;\n        // send \"userDoc\" to the App.js function that changes \"currentUser\"\n        this.props.onUserChange(userDoc);\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          // console.error(\"API response\", err.response.data)\n          return  this.setState({ message: err.response.data.message }) \n        }\n      });\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    if (this.props.currentUser) {\n      return (\n        <section>\n          <h2>You are signed up!</h2>\n          <p>\n            Welcome, {this.props.currentUser.fullName}!\n            Your user ID is <b>{this.props.currentUser._id}.</b>\n          </p>\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"SignupPage\">\n        <h2>Sign Up</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Full Name:\n            <input \n              value={this.state.fullName}\n              onChange={event => this.genericSync(event)}\n              type=\"text\" name=\"fullName\" \n              placeholder=\"Rey\" \n            />\n          </label>\n\n          <label>\n            Email:\n            <input \n              value={this.state.email}\n              onChange={event => this.genericSync(event)}\n              type=\"email\" name=\"email\" \n              placeholder=\"rey@jedi.com\" \n            />\n          </label>\n\n          <label>\n            Password:\n            <input \n              value={this.state.originalPassword}\n              onChange={event => this.genericSync(event)}\n              type=\"password\" name=\"originalPassword\" \n              placeholder=\"****\" \n            />\n          </label>\n\n          <button>Sign Up</button>\n        </form>\n        { this.state.message && <div> { this.state.message } </div> }\n      </section>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      originalPassword: \"\",\n      message: null,\n    };\n  }\n\n  genericSync(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post(\n      process.env.REACT_APP_SERVER_URL + \"/api/login\",\n      this.state,\n      { withCredentials: true } // FORCE axios to send cookies across domains\n    )\n      .then(response => {\n        console.log(\"Login Page\", response.data);\n        const { userDoc } = response.data;\n        // send \"userDoc\" to the App.js function that changes \"currentUser\"\n        this.props.onUserChange(userDoc);\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          // console.error(\"API response\", err.response.data)\n          return  this.setState({ message: err.response.data.message }) \n        }\n    });\n  }\n\n  render() {\n    // check currentUser (received from App.js)\n    // ✅ to be added\n    if (this.props.currentUser) {\n      console.log(this.props.currentUser)\n      return <Redirect to=\"/phone-list\" />\n    }\n\n    return (\n      <section className=\"LoginPage\">\n        <h2>Log In</h2>\n\n        <form onSubmit={event => this.handleSubmit(event)}>\n          <label>\n            Email:\n            <input \n                value={this.state.email}\n                onChange={event => this.genericSync(event)}\n                type=\"email\" \n                name=\"email\" \n                placeholder=\"rey@jedi.com\" \n            />\n          </label>\n\n          <label>\n            Password:\n            <input \n                value={this.state.originalPassword}\n                onChange={event => this.genericSync(event)}\n                type=\"password\" \n                name=\"originalPassword\" \n                placeholder=\"****\"\n            />\n          </label>\n\n          <button>Log In</button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <section className=\"HomePage\">\n        <h2>Home Page</h2>\n        <p>Welcome to Ironphones! Your favorite store foreverrrr!</p>\n      </section>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass AddPhone extends Component { \n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          model: \"\",\n          brand: \"\",\n          price: \"\",\n          image: \"\",\n          // each empty string in \"specs\" will display an <input> tag\n          specs: [ \"\", \"\", \"\", ],\n          isSubmitSuccessful: false,\n        };\n\n        console.log('who: ', this.props)\n    }\n\n    // for all fields except images and specs\n    genericSync(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // upload image\n    uploadImage(event) {\n        const { files } = event.target;\n        console.log(\"File SELECTED\", files[0]);\n    \n        // the \"FormData\" class will format the files for sending to our API\n        const uploadData = new FormData();\n        // the name \"fileSubmission\" is the one your backend route defined.\n        uploadData.append(\"fileSubmission\", files[0]);\n    \n        axios.post(\n          process.env.REACT_APP_SERVER_URL + \"/api/upload-file\",\n          uploadData,\n          { withCredentials: true }\n        )\n        .then(response => {\n        //   console.log(\"Upload Image\", response.data);\n          this.setState({ image: response.data.fileUrl });\n        })\n        .catch(err => {\n          console.log(\"Upload Image ERROR\", err);\n          alert(\"Sorry! Something went wrong.\");\n        });\n      }\n\n    // upload specs\n    syncSpecs(event, index) {\n        const { specs } = this.state;\n        // update the spec value at the given index\n        specs[index] = event.target.value;\n        // set the state with the updated specs array\n        this.setState({ specs });\n    }\n\n\n    handleSubmit(event) {\n        // stop the page refresh\n        event.preventDefault();\n    \n        // PUT and POST requests receive a 2nd argument: the info to submit\n        // (we are submitting the state we've gathered from the form)\n        axios.post(\n          process.env.REACT_APP_SERVER_URL + \"/api/phones\",\n          this.state,\n          { withCredentials: true } // FORCE axios to send cookies across domains\n        )\n          .then(response => {\n            console.log(\"Add Phone\", response.data);\n            this.setState({ isSubmitSuccessful: true });\n          })\n          .catch(err => {\n            console.log(\"Add Phone ERROR\", err);\n            alert(\"Sorry! Something went wrong.\");\n          });\n      }\n\n\n\n    render(){\n        if(!this.props.currentUser){\n            return <Redirect to=\"/login-page\" />;\n        }\n\n        if (this.state.isSubmitSuccessful) {\n            // redirect back to the phone list page if the form submission worked\n            return <Redirect to=\"/phone-list\" />;\n        }\n\n\n\n\n        return (\n            <section>\n                <h2>Add a Phone</h2>\n\n                <form onSubmit={event => this.handleSubmit(event)}>\n                    <label> Model: </label>\n                    <input \n                        value={this.state.model}\n                        onChange={event => this.genericSync(event)}\n                        type=\"text\" \n                        name=\"model\" \n                        placeholder=\"iPhone Xs\" \n                    />\n\n                    <label> Brand: </label>\n                    <input \n                        value={this.state.brand}\n                        onChange={event => this.genericSync(event)}\n                        type=\"text\" \n                        name=\"brand\" \n                        placeholder=\"Apple\" \n                    />\n\n                    <label> Price: </label>\n                    <input \n                        value={this.state.price}\n                        onChange={event => this.genericSync(event)}\n                        type=\"number\" \n                        name=\"price\" \n                        placeholder=\"500\" \n                    />\n\n                    <label> Image: </label>\n                    <input\n                        onChange={ event => this.uploadImage(event) }\n                        type=\"file\"   \n                    />\n                    <br />\n                    <img src={ this.state.image } width=\"200\"/>\n\n                    <br />\n                    <label> Specs: </label>\n                    <br />\n                    <small> has to have three characters or more </small>\n                    <br />\n                    { this.state.specs.map((oneSpec, index) => {\n                        return (\n                            <input \n                                key={ index }\n                                type=\"text\"\n                                value={ oneSpec }\n                                onChange={ event => this.syncSpecs(event,index) }\n                            />\n                        );\n                    })}\n                    <button> Save </button>\n                    \n                </form>\n            </section>\n        )\n    }\n\n\n\n}\n\nexport default AddPhone;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass PhoneList extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        // initial array is empty while we are waiting for the API results\n        phoneArray: [],\n      };\n    }\n\n     // React will call \"componentDidMount()\" automatically when PhoneList loads\n    componentDidMount() {\n        // retrieve the info from the API as soon as the component loads\n        axios.get(\n        process.env.REACT_APP_SERVER_URL + \"/api/phones\",\n        { withCredentials: true } // FORCE axios to send cookies across domains\n        )\n        .then(response => {\n            console.log(\"Phone List\", response.data);\n            // update our state array with the data from the API\n            this.setState({ phoneArray: response.data });\n        })\n        .catch(err => {\n            console.log(\"Phone List ERROR\", err);\n            alert(\"Sorry! Something went wrong.\");\n        });\n  }\n\n  render(){\n    const { phoneArray } = this.state;\n      return(\n          <section>\n              <h2> Phones 📱 ☎️ </h2>\n              <p>Currently we have: { phoneArray.length } phones.</p>\n              <ul>\n                    { phoneArray.map((onePhone) => {\n                      return(\n                        <li key={ onePhone._id }>\n                            <Link to={`/phone-details/${onePhone._id}`}> \n                              { onePhone.model } by { onePhone.brand } \n                            </Link>\n                            \n                            <p> $ { onePhone.price } </p>\n                            <img width=\"150\" src={ onePhone.image } alt={ onePhone.model } />\n                        </li>\n                  \n                      )\n                    })}\n              </ul>\n          </section>\n      )\n  }\n}\n\n\nexport default PhoneList;","import React, { Component } from 'react';\nimport axios from \"axios\";\n\n// import { Link } from \"react-router-dom\";\n\n\nclass EditPhone extends Component {\n    constructor(props){\n        super(props);\n        // console.log(this.props.thePhone)\n        const { model, brand, price, image, specs } = this.props.thePhone;\n        this.state = {\n            model,\n            brand,\n            price,\n            image, \n            specs\n        };\n    }\n\n\n     // for all fields except images and specs\n     genericSync(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    syncSpecs(event, index) {\n        const { specs } = this.state;\n        // update the spec value at the given index\n        specs[index] = event.target.value;\n        // set the state with the updated specs array\n        this.setState({ specs });\n    }\n\n    handleSubmit(event) {\n        // stop the page refresh\n        event.preventDefault();\n    \n        // PUT and POST requests receive a 2nd argument: the info to submit\n        // (we are submitting the state we've gathered from the form)\n        axios.put(\n          process.env.REACT_APP_SERVER_URL + `/api/phones/${this.props.thePhone._id}`,\n          this.state,\n          { withCredentials: true } // FORCE axios to send cookies across domains\n        )\n          .then(response => {\n            this.props.history.push('/phone-list'); \n          })\n          .catch(err => {\n            console.log(\"Update Phone ERROR\", err);\n            alert(\"Sorry! Something went wrong.\");\n          });\n      }\n\n    render(){\n        // console.log('0 000 0 0 0 00 0 ',this.props);\n        console.log(\" = = = == =\", this.state);\n        const { model, brand, price, image, specs } = this.state;\n        return (\n            <section>\n                <h2>Edit { model } by { brand } </h2>\n\n                <form onSubmit={event => this.handleSubmit(event)}>\n                    <label> Model: </label>\n                    <input \n                        value={ model }\n                        onChange={event => this.genericSync(event)}\n                        type=\"text\" \n                        name=\"model\" \n                    />\n\n                    <label> Brand: </label>\n                    <input \n                        value={ brand }\n                        onChange={event => this.genericSync(event)}\n                        type=\"text\" \n                        name=\"brand\" \n                    />\n\n                    <label> Price: </label>\n                    <input \n                        value={ price }\n                        onChange={event => this.genericSync(event)}\n                        type=\"number\" \n                        name=\"price\" \n                    />\n\n                    {/* <label> Image: </label>\n                    <input\n                        onChange={ event => this.uploadImage(event) }\n                        type=\"file\"   \n                    />\n                    <br /> */}\n                    <img src={ image } width=\"200\"/>\n\n                    <br />\n                    <label> Specs: </label>\n                    <br />\n                    <small> has to have three characters or more </small>\n                    <br />\n                    { specs.map((oneSpec, index) => {\n                        return (\n                            <input \n                                key={ index }\n                                type=\"text\"\n                                value={ oneSpec }\n                                onChange={ event => this.syncSpecs(event,index) }\n                            />\n                        );\n                    })}\n                    <button> Save </button>\n                    \n                </form> \n\n            </section>\n        )\n    }\n}\n\nexport default EditPhone;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport EditPhone from './EditPhone';\n\nclass PhoneDetails extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showEdit: false,\n            // we need the initial \"specs\" array to avoid an error with \".map()\"\n            specs: [],\n        };\n    }\n\n    // React will call \"componentDidMount()\" automatically when PhoneDetails loads\n    componentDidMount(){\n        // console.log(' = == = = =', this.props.match.params);\n        const { params } = this.props.match;\n\n        axios.get(process.env.REACT_APP_SERVER_URL + `/api/phones/${params.phoneId}`)\n        .then(responseFromApi => {\n            // console.log('this is res: ', responseFromApi);\n            this.setState(responseFromApi.data);\n        })\n        .catch(err => console.log(err));\n    }\n\n    showEditForm(){\n        this.setState({ showEdit: true });   \n    }\n\n    deletePhone(id){\n        axios.delete(process.env.REACT_APP_SERVER_URL + `/api/phones/${id}`)\n        .then(responseFromApi => {\n            this.props.history.push('/phone-list'); \n        })\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        // console.log('state: ', this.state);\n        const { _id, brand, model, price, image, specs, createdAt } = this.state;\n        return (\n            <section>\n\n                { this.state.showEdit ? <EditPhone thePhone={ this.state } { ...this.props }  /> : (\n                    <section>\n                        {/* <p> This is details page! </p> */}\n                        <h2> { model } by { brand } </h2>\n                        <p> <b> $ { price } </b> </p>\n                        <img src={ image } alt={ model } width=\"200\"/>\n                        <ul>\n                            { specs.map((oneSpec, index) => {\n                                return <li key={ index }> { oneSpec } </li>\n                            }) }\n                        </ul>\n                        <p>  Product ID: { _id }</p>\n                        <p> Added on: { createdAt } </p>\n                        {/* {this.showEditForm()} */}\n                        <button onClick={() => this.showEditForm()}>Edit phone</button>\n                        <button onClick={() => this.deletePhone(_id)}>Delete</button>\n                    </section>\n                    \n                ) }\n              \n                <Link to={\"/phone-list\"}>Go to phones page </Link>\n            </section>\n        )\n    }\n}\n\nexport default PhoneDetails;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section className=\"NotFound\">\n        <h2>404 Not Found</h2>\n\n        <p>Sorry, the page you are looking for doesn't exist. 🙅‍♀️</p>\n\n        <p>\n          Don't hang up the phone, though!\n          <Link to=\"/phone-list\"> See Our Inventory</Link>\n        </p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\nimport { Switch, NavLink, Route } from \"react-router-dom\";\n\n\nimport './App.css';\n\nimport Signup from './components/user-pages/Signup.js';\nimport Login from './components/user-pages/Login.js';\n// import UserProfile from './components/user-pages/UserProfile.js';\nimport Home from \"./components/Home.js\";\n\nimport AddPhone from \"./components/phones-pages/AddPhone.js\";\nimport PhoneList from \"./components/phones-pages/PhoneList.js\";\n\nimport PhoneDetails from \"./components/phones-pages/PhoneDetails.js\";\n\n\nimport NotFound from \"./components/NotFound.js\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  componentDidMount() {\n    // React doesn't know at the start if we are logged-in or not\n    // (but we can ask the server if we are through an API request)\n    axios.get(\n      process.env.REACT_APP_SERVER_URL + \"/api/checkuser\",\n      { withCredentials: true } // FORCE axios to send cookies across domains\n    )\n    .then(response => {\n      // console.log(\"Check User\", response.data);\n      const { userDoc } = response.data;\n      this.syncCurrentUser(userDoc);\n    })\n    .catch(err => {\n      console.log(\"Check User ERROR\", err);\n      alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n  // this is the method for updating \"currentUser\"\n  // (must be defined in App.js since it's the owner of \"currentUser\" now)\n  syncCurrentUser(userDoc) {\n    this.setState({ currentUser: userDoc });\n  }\n\n  logoutClick() {\n    axios.delete(\n      process.env.REACT_APP_SERVER_URL + \"/api/logout\",\n      { withCredentials: true } // FORCE axios to send cookies across domains\n    )\n    .then(() => {\n      // make \"currentUser\" empty again (like it was at the start)\n      this.syncCurrentUser(null);\n    })\n    .catch(err => {\n      console.log(\"Logout ERROR\", err);\n      alert(\"Sorry! Something went wrong.\");\n    });\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1> IronPhones </h1>\n          <nav>\n            {/* <NavLink exact to=\"/\">Home</NavLink> */}\n            \n            { this.state.currentUser ? (\n              <span>\n                {/* <NavLink to=\"/user-profile\">User Profile</NavLink> */}\n                <NavLink to=\"/home\">Home</NavLink>\n                <NavLink to=\"/add-phone\">Add a new phone </NavLink>\n                <NavLink to=\"/phone-list\">Phones </NavLink>\n\n                <br />\n                <b>{this.state.currentUser.email}</b>\n                <button onClick={() => this.logoutClick()}>\n                 Log Out\n                </button>\n            </span>\n            ): (\n              <span>\n                <NavLink to=\"/signup-page\"> Signup </NavLink>\n                <NavLink to=\"/login-page\"> Login </NavLink>\n              </span>\n            )}\n          </nav>\n\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <Route path=\"/phone-list\" component={PhoneList} />\n          <Route path=\"/phone-details/:phoneId\" component={PhoneDetails} />\n\n\n          {/* <Route path=\"/add-phone\" component={AddPhone} /> */}\n              <Route  path=\"/add-phone\" render={ () =>\n                <AddPhone currentUser={ this.state.currentUser } />\n               }  />\n\n          {/* <Route path=\"/user-profile\" component={ UserProfile } /> */}\n          <Route path=\"/signup-page\" render={() => \n            <Signup currentUser={ this.state.currentUser } \n            onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          }  />\n          <Route path=\"/login-page\" render={() => \n              <Login currentUser={ this.state.currentUser } \n              onUserChange={userDoc => this.syncCurrentUser(userDoc)} />\n          }  />\n\n          {/* 404 route ALWAYS LAST */}\n          <Route component={NotFound} />          \n        </Switch>\n       \n        <footer>\n          <p>\n            Made with ❤️ at Ironhack\n          </p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}